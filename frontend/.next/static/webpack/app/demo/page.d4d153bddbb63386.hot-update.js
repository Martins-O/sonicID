"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/demo/page",{

/***/ "(app-pages-browser)/./src/context/WalletContext.tsx":
/*!***************************************!*\
  !*** ./src/context/WalletContext.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletProvider: () => (/* binding */ WalletProvider),\n/* harmony export */   useWallet: () => (/* binding */ useWallet)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useWallet,WalletProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst WalletContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useWallet() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WalletContext);\n    if (context === undefined) {\n        throw new Error('useWallet must be used within a WalletProvider');\n    }\n    return context;\n}\n_s(useWallet, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction WalletProvider(param) {\n    let { children } = param;\n    _s1();\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [currentNetwork, setCurrentNetwork] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [isOnSonicTestnet, setIsOnSonicTestnet] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const SONIC_TESTNET_CONFIG = {\n        chainId: '0x3909',\n        chainName: 'Sonic Testnet',\n        nativeCurrency: {\n            name: 'Sonic',\n            symbol: 'S',\n            decimals: 18\n        },\n        rpcUrls: [\n            'https://rpc.testnet.soniclabs.com'\n        ],\n        blockExplorerUrls: [\n            'https://testnet.soniclabs.com'\n        ]\n    };\n    const checkNetwork = async ()=>{\n        if (!window.ethereum) return;\n        try {\n            const chainId = await window.ethereum.request({\n                method: 'eth_chainId'\n            });\n            const isOnSonic = chainId === SONIC_TESTNET_CONFIG.chainId;\n            setIsOnSonicTestnet(isOnSonic);\n            if (isOnSonic) {\n                setCurrentNetwork('Sonic Testnet');\n            } else {\n                // Map common chain IDs to network names\n                const networkNames = {\n                    '0x1': 'Ethereum Mainnet',\n                    '0x89': 'Polygon',\n                    '0xa86a': 'Avalanche',\n                    '0x38': 'BSC Mainnet',\n                    '0xaa36a7': 'Ethereum Sepolia',\n                    '0x13881': 'Polygon Mumbai'\n                };\n                setCurrentNetwork(networkNames[chainId] || 'Unknown Network');\n            }\n        } catch (error) {\n            console.error('Failed to check network:', error);\n        }\n    };\n    const addSonicTestnet = async ()=>{\n        if (!window.ethereum) return;\n        try {\n            await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                    SONIC_TESTNET_CONFIG\n                ]\n            });\n        } catch (error) {\n            console.error('Failed to add Sonic Testnet:', error);\n            alert('Failed to add Sonic Testnet to your wallet');\n        }\n    };\n    const connectWallet = async ()=>{\n        if (!window.ethereum) {\n            alert('Please install MetaMask to connect your wallet!');\n            return;\n        }\n        setIsConnecting(true);\n        try {\n            // Request account access\n            const accounts = await window.ethereum.request({\n                method: 'eth_requestAccounts'\n            });\n            if (accounts.length === 0) {\n                throw new Error('No accounts found');\n            }\n            setWalletAddress(accounts[0]);\n            setIsConnected(true);\n            await checkNetwork();\n        } catch (error) {\n            console.error('Failed to connect wallet:', error);\n            alert('Failed to connect wallet: ' + error.message);\n        } finally{\n            setIsConnecting(false);\n        }\n    };\n    const disconnectWallet = ()=>{\n        setIsConnected(false);\n        setWalletAddress('');\n    };\n    // Check if wallet is already connected on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WalletProvider.useEffect\": ()=>{\n            const checkConnection = {\n                \"WalletProvider.useEffect.checkConnection\": async ()=>{\n                    if (!window.ethereum) return;\n                    try {\n                        const accounts = await window.ethereum.request({\n                            method: 'eth_accounts'\n                        });\n                        if (accounts.length > 0) {\n                            setWalletAddress(accounts[0]);\n                            setIsConnected(true);\n                            await checkNetwork();\n                        }\n                    } catch (error) {\n                        console.error('Failed to check wallet connection:', error);\n                    }\n                }\n            }[\"WalletProvider.useEffect.checkConnection\"];\n            checkConnection();\n        }\n    }[\"WalletProvider.useEffect\"], []);\n    // Listen for account changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WalletProvider.useEffect\": ()=>{\n            if (window.ethereum) {\n                const handleAccountsChanged = {\n                    \"WalletProvider.useEffect.handleAccountsChanged\": (accounts)=>{\n                        if (accounts.length === 0) {\n                            // User disconnected\n                            setIsConnected(false);\n                            setWalletAddress('');\n                        } else if (accounts[0] !== walletAddress) {\n                            // User switched accounts\n                            setWalletAddress(accounts[0]);\n                            setIsConnected(true);\n                        }\n                    }\n                }[\"WalletProvider.useEffect.handleAccountsChanged\"];\n                const handleChainChanged = {\n                    \"WalletProvider.useEffect.handleChainChanged\": async ()=>{\n                        // Check network when chain changes\n                        await checkNetwork();\n                    }\n                }[\"WalletProvider.useEffect.handleChainChanged\"];\n                window.ethereum.on('accountsChanged', handleAccountsChanged);\n                window.ethereum.on('chainChanged', handleChainChanged);\n                return ({\n                    \"WalletProvider.useEffect\": ()=>{\n                        var _window_ethereum, _window_ethereum1;\n                        (_window_ethereum = window.ethereum) === null || _window_ethereum === void 0 ? void 0 : _window_ethereum.removeListener('accountsChanged', handleAccountsChanged);\n                        (_window_ethereum1 = window.ethereum) === null || _window_ethereum1 === void 0 ? void 0 : _window_ethereum1.removeListener('chainChanged', handleChainChanged);\n                    }\n                })[\"WalletProvider.useEffect\"];\n            }\n        }\n    }[\"WalletProvider.useEffect\"], [\n        walletAddress\n    ]);\n    const value = {\n        isConnected,\n        walletAddress,\n        isConnecting,\n        currentNetwork,\n        isOnSonicTestnet,\n        connectWallet,\n        disconnectWallet,\n        addSonicTestnet\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WalletContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/martins.web3/hacks/sonicid-platform/frontend/src/context/WalletContext.tsx\",\n        lineNumber: 190,\n        columnNumber: 5\n    }, this);\n}\n_s1(WalletProvider, \"svbffURTu8TQ25NhU/DzGxlCHoc=\");\n_c = WalletProvider;\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/WalletContext.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/hooks/useWallet.ts":
/*!********************************!*\
  !*** ./src/hooks/useWallet.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWallet: () => (/* reexport safe */ _context_WalletContext__WEBPACK_IMPORTED_MODULE_0__.useWallet)\n/* harmony export */ });\n/* harmony import */ var _context_WalletContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/context/WalletContext */ \"(app-pages-browser)/./src/context/WalletContext.tsx\");\n// Re-export the useWallet hook from the context for backward compatibility\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VXYWxsZXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwyRUFBMkU7QUFDeEIiLCJzb3VyY2VzIjpbIi9ob21lL21hcnRpbnMud2ViMy9oYWNrcy9zb25pY2lkLXBsYXRmb3JtL2Zyb250ZW5kL3NyYy9ob29rcy91c2VXYWxsZXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUmUtZXhwb3J0IHRoZSB1c2VXYWxsZXQgaG9vayBmcm9tIHRoZSBjb250ZXh0IGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5leHBvcnQgeyB1c2VXYWxsZXQgfSBmcm9tICdAL2NvbnRleHQvV2FsbGV0Q29udGV4dCciXSwibmFtZXMiOlsidXNlV2FsbGV0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWallet.ts\n"));

/***/ })

});